import com.sky.bean.transaction.OpenseaFee;
import com.sky.func.GenericUDTFParseNFTTrades;
import com.sky.func.ParseInputDataOfOpensea;
import com.sky.util.ToolUtil;
import org.apache.hadoop.hive.ql.metadata.HiveException;
import org.apache.velocity.runtime.directive.Parse;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;

public class Test {
    //汇率除数
    private final static BigDecimal INVERSE_BASIS_POINT = new BigDecimal(10000);

    public static void main(String[] args) throws HiveException {
        String str01 = "0x186b100c0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000008aea88dc75c01a0000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001448e1d75a8000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e8010042ee000000000000000000000000000000000000000000000000ea88dc75c01a0000627943a262a2227edc840005b8f9a184402805790ee69eb796222b4327ac5835082b9a18e4bdedd54502d1a1fa369a2b9c99429811d188c3187ef43136c016b2fd1c23e54393c416a8393d2a8e9647261c47704a43fd198ad6577c3e763e1d7e822ae1c06bd162e332c14554559bb0b7be3746f4bcb26a72a6c1bc860000000000000000000000000000000000000000000000000000000000000d1b7cdac4326d72940665b8c5ed832b4a9ebdfbd660ed5af388653567af2f388e6224dc7c4b3241c54400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000023636b7d513f0000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003e496582bba000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001800000000000000000000000007cdac4326d72940665b8c5ed832b4a9ebdfbd66000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000031837aaf36961274a04b915697fdfca1af31a0c700000000000000000000000000000000000000000000000023636b7d513f00000000000000000000000000000000000000000000000000000000000000003539000000000000000000000000000000000000000000000000000000000000213400000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000b12bf1701d8f9336bc89ca83ee42f33ac21cb18a000000000000000000000000306b1ea3ecdf94ab739f1910bbda052ed4a9f94900000000000000000000000000000000000000000000000023636b7d513f00000000000000000000000000000000000000000000000000000000000000003539000000000000000000000000000000000000000000000000000000000000000100000000000000000000000056244bb70cbd3ea9dc8007399f61dfc065190031000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000006c000000000000000000000000000000000000000000000000000000006279460f00000000000000000000000000000000000000000000000000000000627cf65400000000000000000000000000000000000000000000000000000000000021340000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001ce95393d7d9da45a1cd087d0e0c328a02417b5afd6a604ed89a05b62b98199ee75a72e7d010a92ef866f058f35911b4915ebec7691f8453365063e3addbf553580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";

        //获取opensea的税收
//        ArrayList<OpenseaFee> openseaFeeList = new ArrayList<>();
//        new ParseInputDataOfOpensea().parseDataToFeeList("", str01, openseaFeeList);

        String data = str01.substring(10);
        for (int i = 0; i < data.length(); i += 64) {
            System.out.println(i / 64 + ":" + data.substring(i, i + 64));
        }

    }
}
